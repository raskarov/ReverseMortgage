//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LoanStarReports.Data {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("PipeLine")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PipeLine : System.Data.DataSet {
        
        private MortgageUserDataTable tableMortgageUser;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PipeLine() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PipeLine(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["MortgageUser"] != null)) {
                    base.Tables.Add(new MortgageUserDataTable(ds.Tables["MortgageUser"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MortgageUserDataTable MortgageUser {
            get {
                return this.tableMortgageUser;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            PipeLine cln = ((PipeLine)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MortgageUser"] != null)) {
                    base.Tables.Add(new MortgageUserDataTable(ds.Tables["MortgageUser"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMortgageUser = ((MortgageUserDataTable)(base.Tables["MortgageUser"]));
            if ((initTable == true)) {
                if ((this.tableMortgageUser != null)) {
                    this.tableMortgageUser.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PipeLine";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PipeLine.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMortgageUser = new MortgageUserDataTable();
            base.Tables.Add(this.tableMortgageUser);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMortgageUser() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            PipeLine ds = new PipeLine();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
//        public delegate void MortgageUserRowChangeEventHandler(object sender, MortgageUserRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MortgageUserDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMPID;
            
            private System.Data.DataColumn columnYBID;
            
            private System.Data.DataColumn columnMPStatusID;
            
            private System.Data.DataColumn columnMPProductID;
            
            private System.Data.DataColumn columnYBStateID;
            
            private System.Data.DataColumn columnMPStatusName;
            
            private System.Data.DataColumn columnMPProductName;
            
            private System.Data.DataColumn columnYBStateAbbr;
            
            private System.Data.DataColumn columnClosingDate;
            
            private System.Data.DataColumn columnYBFullName;
            
            private System.Data.DataColumn columnLOFullName;
            
            private System.Data.DataColumn columnPFullName;
            
            private System.Data.DataColumn columnLOID;
            
            private System.Data.DataColumn columnPID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MortgageUserDataTable() {
                this.TableName = "MortgageUser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MortgageUserDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MortgageUserDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPIDColumn {
                get {
                    return this.columnMPID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YBIDColumn {
                get {
                    return this.columnYBID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPStatusIDColumn {
                get {
                    return this.columnMPStatusID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPProductIDColumn {
                get {
                    return this.columnMPProductID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YBStateIDColumn {
                get {
                    return this.columnYBStateID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPStatusNameColumn {
                get {
                    return this.columnMPStatusName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPProductNameColumn {
                get {
                    return this.columnMPProductName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YBStateAbbrColumn {
                get {
                    return this.columnYBStateAbbr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClosingDateColumn {
                get {
                    return this.columnClosingDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YBFullNameColumn {
                get {
                    return this.columnYBFullName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOFullNameColumn {
                get {
                    return this.columnLOFullName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PFullNameColumn {
                get {
                    return this.columnPFullName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOIDColumn {
                get {
                    return this.columnLOID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MortgageUserRow this[int index] {
                get {
                    return ((MortgageUserRow)(this.Rows[index]));
                }
            }
            
            public event MortgageUserRowChangeEventHandler MortgageUserRowChanging;
            
            public event MortgageUserRowChangeEventHandler MortgageUserRowChanged;
            
            public event MortgageUserRowChangeEventHandler MortgageUserRowDeleting;
            
            public event MortgageUserRowChangeEventHandler MortgageUserRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMortgageUserRow(MortgageUserRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MortgageUserRow AddMortgageUserRow(int MPID, int YBID, int MPStatusID, int MPProductID, int YBStateID, string MPStatusName, string MPProductName, string YBStateAbbr, string ClosingDate, string YBFullName, string LOFullName, string PFullName, int LOID, int PID) {
                MortgageUserRow rowMortgageUserRow = ((MortgageUserRow)(this.NewRow()));
                rowMortgageUserRow.ItemArray = new object[] {
                        MPID,
                        YBID,
                        MPStatusID,
                        MPProductID,
                        YBStateID,
                        MPStatusName,
                        MPProductName,
                        YBStateAbbr,
                        ClosingDate,
                        YBFullName,
                        LOFullName,
                        PFullName,
                        LOID,
                        PID};
                this.Rows.Add(rowMortgageUserRow);
                return rowMortgageUserRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MortgageUserDataTable cln = ((MortgageUserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MortgageUserDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMPID = base.Columns["MPID"];
                this.columnYBID = base.Columns["YBID"];
                this.columnMPStatusID = base.Columns["MPStatusID"];
                this.columnMPProductID = base.Columns["MPProductID"];
                this.columnYBStateID = base.Columns["YBStateID"];
                this.columnMPStatusName = base.Columns["MPStatusName"];
                this.columnMPProductName = base.Columns["MPProductName"];
                this.columnYBStateAbbr = base.Columns["YBStateAbbr"];
                this.columnClosingDate = base.Columns["ClosingDate"];
                this.columnYBFullName = base.Columns["YBFullName"];
                this.columnLOFullName = base.Columns["LOFullName"];
                this.columnPFullName = base.Columns["PFullName"];
                this.columnLOID = base.Columns["LOID"];
                this.columnPID = base.Columns["PID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMPID = new System.Data.DataColumn("MPID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPID);
                this.columnYBID = new System.Data.DataColumn("YBID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYBID);
                this.columnMPStatusID = new System.Data.DataColumn("MPStatusID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPStatusID);
                this.columnMPProductID = new System.Data.DataColumn("MPProductID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPProductID);
                this.columnYBStateID = new System.Data.DataColumn("YBStateID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYBStateID);
                this.columnMPStatusName = new System.Data.DataColumn("MPStatusName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPStatusName);
                this.columnMPProductName = new System.Data.DataColumn("MPProductName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPProductName);
                this.columnYBStateAbbr = new System.Data.DataColumn("YBStateAbbr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYBStateAbbr);
                this.columnClosingDate = new System.Data.DataColumn("ClosingDate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingDate);
                this.columnYBFullName = new System.Data.DataColumn("YBFullName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYBFullName);
                this.columnLOFullName = new System.Data.DataColumn("LOFullName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOFullName);
                this.columnPFullName = new System.Data.DataColumn("PFullName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFullName);
                this.columnLOID = new System.Data.DataColumn("LOID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOID);
                this.columnPID = new System.Data.DataColumn("PID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MortgageUserRow NewMortgageUserRow() {
                return ((MortgageUserRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MortgageUserRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MortgageUserRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MortgageUserRowChanged != null)) {
                    this.MortgageUserRowChanged(this, new MortgageUserRowChangeEvent(((MortgageUserRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MortgageUserRowChanging != null)) {
                    this.MortgageUserRowChanging(this, new MortgageUserRowChangeEvent(((MortgageUserRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MortgageUserRowDeleted != null)) {
                    this.MortgageUserRowDeleted(this, new MortgageUserRowChangeEvent(((MortgageUserRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MortgageUserRowDeleting != null)) {
                    this.MortgageUserRowDeleting(this, new MortgageUserRowChangeEvent(((MortgageUserRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMortgageUserRow(MortgageUserRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                PipeLine ds = new PipeLine();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MortgageUserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MortgageUserRow : System.Data.DataRow {
            
            private MortgageUserDataTable tableMortgageUser;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MortgageUserRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMortgageUser = ((MortgageUserDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MPID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.MPIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.MPIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YBID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.YBIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'YBID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.YBIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MPStatusID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.MPStatusIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPStatusID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.MPStatusIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MPProductID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.MPProductIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPProductID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.MPProductIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int YBStateID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.YBStateIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'YBStateID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.YBStateIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MPStatusName {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.MPStatusNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPStatusName\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.MPStatusNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MPProductName {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.MPProductNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPProductName\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.MPProductNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YBStateAbbr {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.YBStateAbbrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'YBStateAbbr\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.YBStateAbbrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClosingDate {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.ClosingDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClosingDate\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.ClosingDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YBFullName {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.YBFullNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'YBFullName\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.YBFullNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOFullName {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.LOFullNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOFullName\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.LOFullNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PFullName {
                get {
                    try {
                        return ((string)(this[this.tableMortgageUser.PFullNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PFullName\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.PFullNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.LOIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.LOIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PID {
                get {
                    try {
                        return ((int)(this[this.tableMortgageUser.PIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PID\' in table \'MortgageUser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMortgageUser.PIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPIDNull() {
                return this.IsNull(this.tableMortgageUser.MPIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPIDNull() {
                this[this.tableMortgageUser.MPIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYBIDNull() {
                return this.IsNull(this.tableMortgageUser.YBIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYBIDNull() {
                this[this.tableMortgageUser.YBIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPStatusIDNull() {
                return this.IsNull(this.tableMortgageUser.MPStatusIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPStatusIDNull() {
                this[this.tableMortgageUser.MPStatusIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPProductIDNull() {
                return this.IsNull(this.tableMortgageUser.MPProductIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPProductIDNull() {
                this[this.tableMortgageUser.MPProductIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYBStateIDNull() {
                return this.IsNull(this.tableMortgageUser.YBStateIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYBStateIDNull() {
                this[this.tableMortgageUser.YBStateIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPStatusNameNull() {
                return this.IsNull(this.tableMortgageUser.MPStatusNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPStatusNameNull() {
                this[this.tableMortgageUser.MPStatusNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPProductNameNull() {
                return this.IsNull(this.tableMortgageUser.MPProductNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPProductNameNull() {
                this[this.tableMortgageUser.MPProductNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYBStateAbbrNull() {
                return this.IsNull(this.tableMortgageUser.YBStateAbbrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYBStateAbbrNull() {
                this[this.tableMortgageUser.YBStateAbbrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingDateNull() {
                return this.IsNull(this.tableMortgageUser.ClosingDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingDateNull() {
                this[this.tableMortgageUser.ClosingDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYBFullNameNull() {
                return this.IsNull(this.tableMortgageUser.YBFullNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYBFullNameNull() {
                this[this.tableMortgageUser.YBFullNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOFullNameNull() {
                return this.IsNull(this.tableMortgageUser.LOFullNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOFullNameNull() {
                this[this.tableMortgageUser.LOFullNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPFullNameNull() {
                return this.IsNull(this.tableMortgageUser.PFullNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPFullNameNull() {
                this[this.tableMortgageUser.PFullNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOIDNull() {
                return this.IsNull(this.tableMortgageUser.LOIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOIDNull() {
                this[this.tableMortgageUser.LOIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPIDNull() {
                return this.IsNull(this.tableMortgageUser.PIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPIDNull() {
                this[this.tableMortgageUser.PIDColumn] = System.Convert.DBNull;
            }
        }
        
     //   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        //public class MortgageUserRowChangeEvent : System.EventArgs {
            
        //    private MortgageUserRow eventRow;
            
        //    private System.Data.DataRowAction eventAction;

        //    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        //    public MortgageUserRowChangeEvent(MortgageUserRow row, System.Data.DataRowAction action)
        //    {
        //        this.eventRow = row;
        //        this.eventAction = action;
        //    }
            
        //    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        //    public MortgageUserRow Row {
        //        get {
        //            return this.eventRow;
        //        }
        //    }
            
        //    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        //    public System.Data.DataRowAction Action {
        //        get {
        //            return this.eventAction;
        //        }
        //    }
        //}
    }
}

#pragma warning restore 1591